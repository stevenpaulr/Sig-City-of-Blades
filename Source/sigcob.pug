-
	const translation = locals.translation,
		cultures = Object.keys(locals.data.cultures),
		lineages = Object.keys(locals.data.lineages),
		devotions = Object.keys(locals.data.devotions);


mixin checkbox(name, extraclass)
	input(type='checkbox', class=[attributes.class, extraclass || ''], name=`attr_${name}`, value=attributes.value, checked=attributes.checked)
	span(class=extraclass, data-i18n!=attributes['data-i18n'])
		block

mixin newcheckbox(name, extraclass)
	input(type='checkbox', class=[attributes.class, extraclass || ''], name=`attr_${name}`, value=attributes.value, checked=attributes.checked)
	span
		block

mixin 6checkbox(namebase, extraclass)
	+checkbox(namebase+'1', extraclass+'1 '+extraclass)
	+checkbox(namebase+'2', extraclass+'2 '+extraclass)
	+checkbox(namebase+'3', extraclass+'3 '+extraclass)
	+checkbox(namebase+'4', extraclass+'4 '+extraclass)
	+checkbox(namebase+'5', extraclass+'5 '+extraclass)
	+checkbox(namebase+'6', extraclass+'6 '+extraclass)
	.underlay
		block

mixin 4checkbox(namebase, extraclass)
	+checkbox(namebase, extraclass+'0 '+extraclass)(value=0, checked)
	+checkbox(namebase, extraclass+'1 '+extraclass)(value=1)
	+checkbox(namebase, extraclass+'2 '+extraclass)(value=2)
	+checkbox(namebase, extraclass+'3 '+extraclass)(value=3)
	+checkbox(namebase, extraclass+'4 '+extraclass)(value=4)

mixin radio(name)
	input(type='radio', class!=attributes.class, name=`attr_${name}`, value!=attributes.value, checked=attributes.checked)
	span(data-i18n!=attributes['data-i18n'])
		block

mixin text-input(name, i18nvalue)
	input(type='text', spellcheck='false', name=`attr_${name}`, placeholder=i18nvalue ? translation[i18nvalue] : false)&attributes(attributes)

mixin number-input(name)
	input(type='number', name=`attr_${name}`)&attributes(attributes)

mixin textarea(name, i18nvalue)
	textarea(spellcheck='false', name=`attr_${name}`, placeholder=i18nvalue ? translation[i18nvalue] : false)&attributes(attributes)
		

mixin hidden-input(name)
	input(type='hidden', name=`attr_${name}`)&attributes(attributes)

mixin hidden-checkbox(name)
	- classes = attributes.class;
	- delete attributes.class;
	input(type='checkbox', name=`attr_${name}`, class=['hidden', classes])&attributes(attributes)

mixin autoexpand(name, i18nvalue)
	div(class=['auto-expand', attributes.class])
		span(name=`attr_${name}`)= i18nvalue ? translation[i18nvalue] : ''
		+textarea(name, i18nvalue)(data-i18n-placeholder!=attributes['data-i18n-placeholder'])

//- Creates a roll button using stat as a bonus
mixin roll(name, stat)
	button(
		type='action',
		name='act_roll',
		title=`${name}`,
		value=`${stat}`
	)&attributes(attributes)



.sheet-wrapper
	include pug/character.pug

|
include pug/rolltemplate.pug
|
|
|
script(type='text/worker')
	!= locals.workers
